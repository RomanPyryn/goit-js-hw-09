{"version":3,"sources":["js/03-promises.js"],"names":["formEl","document","querySelector","inputDelayEl","inputStepEl","inputAmountEl","formData","delay","step","amount","position","timerId","onFormSubmit","e","preventDefault","value","setTimeout","timer","setInterval","createPromise","then","console","log","catch","clearInterval","promise","Promise","resolve","reject","shouldResolve","Math","random","data","addEventListener"],"mappings":";AAAA,MAAMA,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,UACtCE,EAAcH,SAASC,cAAc,SACrCG,EAAgBJ,SAASC,cAAc,WAE7C,IAAII,EAAW,CACbC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAGNF,EAAQD,EAASC,MACjBG,EAAW,EACXC,EAAU,KAId,SAASC,EAAaC,GACpBA,EAAEC,iBAEFR,EAAW,CACXC,OAAQJ,EAAaY,MACrBP,MAAOJ,EAAYW,MACnBN,QAASJ,EAAcU,OAGvBC,WAAW,KACTC,KACGX,EAASC,OAGhB,SAASU,IAEPN,EAAUO,YAAY,MACpBR,GAAY,GAEG,EACbH,GAASD,EAASE,KAElBD,EAAQD,EAASC,MAEjBY,EAAcT,EAAUH,GAC3Ba,KAAK,EAAGV,SAAAA,EAAUH,MAAAA,MACjBc,QAAQC,2BAA2BZ,QAAeH,SAEnDgB,MAAM,EAAGb,SAAAA,EAAUH,MAAAA,MAClBc,QAAQC,0BAA0BZ,QAAeH,SAG7CD,EAASG,SAAWC,IACtBc,cAAcb,GAEdL,EAAW,CACTC,MAAO,EACPC,KAAM,EACNC,OAAQ,GAGVC,EAAW,IAGZJ,EAASE,MAId,SAASW,EAAcT,EAAUH,GAcxBkB,OAbS,IAAIC,QAAQ,CAACC,EAASC,KAC9BC,MAAAA,EAAgBC,KAAKC,SAAW,GAChCC,EAAO,CAAEtB,SAAAA,EAAUH,MAAAA,GAErBsB,EAEAF,EAAQK,GAGRJ,EAAOI,KA5DfhC,EAAOiC,iBAAiB,SAAUrB","file":"03-promises.d40ca1e9.js","sourceRoot":"../src","sourcesContent":["const formEl = document.querySelector('.form');\nconst inputDelayEl = document.querySelector('.delay');\nconst inputStepEl = document.querySelector('.step');\nconst inputAmountEl = document.querySelector('.amount');\n\nlet formData = {\n  delay: 0,\n  step: 0,\n  amount: 0,\n};\n\nlet delay = formData.delay;\nlet position = 0;\nlet timerId = null;\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) { \n  e.preventDefault();\n\n  formData = {\n  delay: +inputDelayEl.value,\n  step: +inputStepEl.value,\n  amount: +inputAmountEl.value,\n};\n\n  setTimeout(() => {\n    timer();\n    }, formData.delay);\n};\n\nfunction timer() {\n  \n  timerId = setInterval(() => {\n    position += 1;\n\n    if (position > 1) {\n      delay += formData.step;\n    } else {\n      delay = formData.delay;\n    };\n      createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  \n    if (formData.amount === position) { \n      clearInterval(timerId);\n      \n      formData = {\n        delay: 0,\n        step: 0,\n        amount: 0,\n      };\n\n      position = 0;\n    };\n      \n  }, formData.step);\n    \n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n    const data = { position, delay};\n\n    if (shouldResolve) {\n        // Fulfill\n        resolve(data);\n      } else {\n        // Reject\n        reject(data);\n      };\n  });\n\n  return promise;\n}\n\n\n\n"]}